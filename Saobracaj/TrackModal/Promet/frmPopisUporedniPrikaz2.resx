<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="button3.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAaEAAADdCAYAAAASP83MAAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAu
        IwAALiMBeKU/dgAAD3xJREFUeF7t1dmypVlVhmHvQanKJGxRUBEj8I68lDwtOgERG5C+KdoqpMm9kq5o
        BA889ja4hOTP7Rqrxtr728UJMYgYPAdvzBkx5/H3/MHjm/95/vZLvzz6xW2Pnv73bY+f/vy2Rzcv+tnz
        x5d+evz7yaVHT9+47fGlH9/26Kb3o3M/fKAf3Oulp9//LfTs+dtu7nZq3TzQ03Pfe6DvPv/D2Hda377X
        H938V+tbV7182+vPXzqlXou9fPrmm918416Pbr5+6aXTm718+lrrq6GvXHp01autLx/vr557cX/Rly49
        uuqLrS/c6/Hp81c9enbu9LkH+uylx6fPvEWfvtOnYm8//eedPnnbH5/7k6s+celP7/Rnp/+46s9P/x77
        i9O/XfWO078+2F+ePn7pr8696+idz47z2b9c+ut7fezS3zz756v+tvXuZx+97vSRS393p/ecPvxgf3/6
        p+fvfVZ96C364HWnD/yOe/94/3B63+9Br/ymfgUhCJ2DEIQgNFke7W1FeHoQghCEKghBaLI82tuK8PQg
        BCEIVRCC0GR5tLcV4elBCEIQqiAEocnyaG8rwtODEIQgVEEIQpPl0d5WhKcHIQhBqIIQhCbLo72tCE8P
        QhCCUAUhCE2WR3tbEZ4ehCAEoQpCEJosj/a2Ijw9CEEIQhWEIDRZHu1tRXh6EIIQhCoIQWiyPNrbivD0
        IAQhCFUQgtBkebS3FeHpQQhCEKogBKHJ8mhvK8LTgxCEIFRBCEKT5dHeVoSnByEIQaiCEIQmy6O9rQhP
        D0IQglAFIQhNlkd7WxGeHoQgBKEKQhCaLI/2tiI8PQhBCEIVhCA0WR7tbUV4ehCCEIQqCEFosjza24rw
        9CAEIQhVEILQZHm0txXh6UEIQhCqIAShyfJobyvC04MQhCBUQQhCk+XR3laEpwchCEGoghCEJsujva0I
        Tw9CEIJQBSEITZZHe1sRnh6EIAShCkIQmiyP9rYiPD0IQQhCFYQgNFke7W1FeHoQghCEKghBaLI82tuK
        8PQgBCEIVRCC0GR5tLcV4elBCEIQqiAEocnyaG8rwtODEIQgVEEIQpPl0d5WhKcHIQhBqIIQhCbLo72t
        CE8PQhCCUAUhCE2WR3tbEZ4ehCAEoQpCEJosj/a2Ijw9CEEIQhWEIDRZHu1tRXh6EIIQhCoIQWiyPNrb
        ivD0IAQhCFUQgtBkebS3FeHpQQhCEKogBKHJ8mhvK8LTgxCEIFRBCEKT5dHeVoSnByEIQaiCEIQmy6O9
        rQhPD0IQglAFIQhNlkd7WxGeHoQgBKEKQhCaLI/2tiI8PQhBCEIVhCA0WR7tbUV4ehCCEIQqCEFosjza
        24rw9CAEIQhVEILQZHm0txXh6UEIQhCqIAShyfJobyvC04MQhCBUQQhCk+XR3laEpwchCEGoghCEJsuj
        va0ITw9CEIJQBSEITZZHe1sRnh6EIAShCkIQmiyP9rYiPD0IQQhCFYQgNFke7W1FeHoQghCEKghBaLI8
        2tuK8PQgBCEIVRCC0GR5tLcV4elBCEIQqiAEocnyaG8rwtODEIQgVEEIQpPl0d5WhKcHIQhBqIIQhCbL
        o72tCE8PQhCCUAUhCE2WR3tbEZ4ehCAEoQpCEJosj/a2Ijw9CEEIQhWEIDRZHu1tRXh6EIIQhCoIQWiy
        PNrbivD0IAQhCFUQgtBkebS3FeHpQQhCEKogBKHJ8mhvK8LTgxCEIFRBCEKT5dHeVoSnByEIQaiCEIQm
        y6O9rQhPD0IQglAFIQhNlkd7WxGeHoQgBKEKQhCaLI/2tiI8PQhBCEIVhCA0WR7tbUV4ehCCEIQqCEFo
        sjza24rw9CAEIQhVEILQZHm0txXh6UEIQhCqIAShyfJobyvC04MQhCBUQQhCk+XR3laEpwchCEGoghCE
        Jsujva0ITw9CEIJQBSEITZZHe1sRnh6EIAShCkIQmiyP9rYiPD0IQQhCFYQgNFke7W1FeHoQghCEKghB
        aLI82tuK8PQgBCEIVRCC0GR5tLcV4elBCEIQqiAEocnyaG8rwtODEIQgVEEIQpPl0d5WhKcHIQhBqIIQ
        hCbLo72tCE8PQhCCUAUhCE2WR3tbEZ4ehCAEoQpCEJosj/a2Ijw9CEEIQhWEIDRZHu1tRXh6EIIQhCoI
        QWiyPNrbivD0IAQhCFUQgtBkebS3FeHpQQhCEKogBKHJ8mhvK8LTgxCEIFRBCEKT5dHeVoSnByEIQaiC
        EIQmy6O9rQhPD0IQglAFIQhNlkd7WxGeHoQgBKEKQhCaLI/2tiI8vf+DEITOQQhCEJosj/a2Ijy9NyAE
        oXMQghCEJsujva0ITw9CEIJQBSEITZZHe1sRnh6EIAShCkIQmiyP9rYiPD0IQQhCFYQgNFke7W1FeHoQ
        ghCEKghBaLI82tuK8PQgBCEIVRCC0GR5tLcV4elBCEIQqiAEocnyaG8rwtODEIQgVEEIQpPl0d5WhKcH
        IQhBqIIQhCbLo72tCE8PQhCCUAUhCE2WR3tbEZ4ehCAEoQpCEJosj/a2Ijw9CEEIQhWEIDRZHu1tRXh6
        EIIQhCoIQWiyPNrbivD0IAQhCFUQgtBkebS3FeHpQQhCEKogBKHJ8mhvK8LTgxCEIFRBCEKT5dHeVoSn
        ByEIQaiCEIQmy6O9rQhPD0IQglAFIQhNlkd7WxGeHoQgBKEKQhCaLI/2tiI8PQhBCEIVhCA0WR7tbUV4
        ehCCEIQqCEFosjza24rw9CAEIQhVEILQZHm0txXh6UEIQhCqIAShyfJobyvC04MQhCBUQQhCk+XR3laE
        pwchCEGoghCEJsujva0ITw9CEIJQBSEITZZHe1sRnh6EIAShCkIQmiyP9rYiPD0IQQhCFYQgNFke7W1F
        eHoQghCEKghBaLI82tuK8PQgBCEIVRCC0GR5tLcV4elBCEIQqiAEocnyaG8rwtODEIQgVEEIQpPl0d5W
        hKcHIQhBqIIQhCbLo72tCE8PQhCCUAUhCE2WR3tbEZ4ehCAEoQpCEJosj/a2Ijw9CEEIQhWEIDRZHu1t
        RXh6EIIQhCoIQWiyPNrbivD0IAQhCFUQgtBkebS3FeHpQQhCEKogBKHJ8mhvK8LTgxCEIFRBCEKT5dHe
        VoSnByEIQaiCEIQmy6O9rQhPD0IQglAFIQhNlkd7WxGeHoQgBKEKQhCaLI/2tiI8vV9BCELnIAQhCE2W
        R3tbEZ4ehCAEoQpCEJosj/a2Ijw9CEEIQhWEIDRZHu1tRXh6EIIQhCoIQWiyPNrbivD0IAQhCFUQgtBk
        ebS3FeHpQQhCEKogBKHJ8mhvK8LTgxCEIFRBCEKT5dHeVoSnByEIQaiCEIQmy6O9rQhPD0IQglAFIQhN
        lkd7WxGeHoQgBKEKQhCaLI/2tiI8PQhBCEIVhCA0WR7tbUV4ehCCEIQqCEFosjza24rw9CAEIQhVEILQ
        ZHm0txXh6UEIQhCqIAShyfJobyvC04MQhCBUQQhCk+XR3laEpwchCEGoghCEJsujva0ITw9CEIJQBSEI
        TZZHe1sRnh6EIAShCkIQmiyP9rYiPD0IQQhCFYQgNFke7W1FeHoQghCEKghBaLI82tuK8PQgBCEIVRCC
        0GR5tLcV4elBCEIQqiAEocnyaG8rwtODEIQgVEEIQpPl0d5WhKcHIQhBqIIQhCbLo72tCE8PQhCCUAUh
        CE2WR3tbEZ4ehCAEoQpCEJosj/a2Ijw9CEEIQhWEIDRZHu1tRXh6EIIQhCoIQWiyPNrbivD0IAQhCFUQ
        gtBkebS3FeHpQQhCEKogBKHJ8mhvK8LTgxCEIFRBCEKT5dHeVoSnByEIQaiCEIQmy6O9rQhPD0IQglAF
        IQhNlkd7WxGeHoQgBKEKQhCaLI/2tiI8PQhBCEIVhCA0WR7tbUV4ehCCEIQqCEFosjza24rw9CAEIQhV
        EILQZHm0txXh6UEIQhCqIAShyfJobyvC04MQhCBUQQhCk+XR3laEpwchCEGoghCEJsujva0ITw9CEIJQ
        BSEITZZHe1sRnh6EIAShCkIQmiyP9rYiPD0IQQhCFYQgNFke7W1FeHoQghCEKghBaLI82tuK8PT+F0IQ
        OgchCEFosjza24rw9N6AEITOQQhCEJosj/a2Ijw9CEEIQhWEIDRZHu1tRXh6EIIQhCoIQWiyPNrbivD0
        IAQhCFUQgtBkebS3FeHpQQhCEKogBKHJ8mhvK8LTgxCEIFRBCEKT5dHeVoSnByEIQaiCEIQmy6O9rQhP
        D0IQglAFIQhNlkd7WxGeHoQgBKEKQhCaLI/2tiI8PQhBCEIVhCA0WR7tbUV4ehCCEIQqCEFosjza24rw
        9CAEIQhVEILQZHm0txXh6UEIQhCqIAShyfJobyvC04MQhCBUQQhCk+XR3laEpwchCEGoghCEJsujva0I
        Tw9CEIJQBSEITZZHe1sRnh6EIAShCkIQmiyP9rYiPD0IQQhCFYQgNFke7W1FeHoQghCEKghBaLI82tuK
        8PQgBCEIVRCC0GR5tLcV4elBCEIQqiAEocnyaG8rwtODEIQgVEEIQpPl0d5WhKcHIQhBqIIQhCbLo72t
        CE8PQhCCUAUhCE2WR3tbEZ4ehCAEoQpCEJosj/a2Ijw9CEEIQhWEIDRZHu1tRXh6EIIQhCoIQWiyPNrb
        ivD0IAQhCFUQgtBkebS3FeHpQQhCEKogBKHJ8mhvK8LTgxCEIFRBCEKT5dHeVoSnByEIQaiCEIQmy6O9
        rQhPD0IQglAFIQhNlkd7WxGeHoQgBKEKQhCaLI/2tiI8PQhBCEIVhCA0WR7tbUV4ehCCEIQqCEFosjza
        24rw9CAEIQhVEILQZHm0txXh6UEIQhCqIAShyfJobyvC04MQhCBUQQhCk+XR3laEpwchCEGoghCEJsuj
        va0ITw9CEIJQBSEITZZHe1sRnh6EIAShCkIQmiyP9rYiPD0IQQhCFYQgNFke7W1FeHq3CD05ADr3y6Nf
        3HYAdNsB0G0HQkc/e3IAdO6nx7+fXDoAuu0A6NyPbzvwaf3o3A8f6Af3OhD5LfTsyQHPnU6tmwd6eu57
        D/TdJwc6oe+0vn2vA5/Wt646EDp6/cmBTui12IHPm918414HPpcOfC4d+LS+GvrKpQOf1qutLx/vr557
        cX/Rly4d+LS+2PrCvQ54rjoA+v9On3ugz146sHmLPn2nT8UOeO70ydsOgG478Gl94tIBz1UHPFcd4MQO
        eK46sHmwA59LB0C3HQg9ORB6cuBz6YDnTh+7dMBz1YHPpQOe604fuXTAc9WBzYMdCD05ADr3obfog9ed
        PvA77v3jHSP9e9Arv6FX/vHXdCNB7NcXsIwAAAAASUVORK5CYII=
</value>
  </data>
</root>